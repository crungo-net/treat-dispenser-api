variables:
  DOCKER_AUTH_CONFIG: '{"auths":{"harbor.crungo.net":{"username":"$CI_REGISTRY_USER","password":"$CI_REGISTRY_PASSWORD"}}}'

stages:
  - build
  - deploy

build-and-push:
  stage: build
  image: harbor.crungo.net/docker-proxy/moby/buildkit:latest
  rules:
    - if: '$CI_COMMIT_BRANCH'  # Only run if this is a branch pipeline
      when: always
  tags:
    - home-lab
  before_script:
    - mkdir -p ~/.docker
    - echo '{"auths":{"harbor.crungo.net":{"username":"'"$CI_REGISTRY_USER"'","password":"'"$CI_REGISTRY_PASSWORD"'"}}}' > ~/.docker/config.json
  script: |
    export CACHE_IMAGE=harbor.crungo.net/scout/treat-dispenser-api:buildcache
    export IMAGE=harbor.crungo.net/scout/treat-dispenser-api
    export SHORT_SHA=$(echo "$CI_COMMIT_SHA" | cut -c1-8)
    export CACHE_BUST=$(date +%s)

    if [ -n "$CI_COMMIT_BRANCH" ]; then
      SAFE_REF="$CI_COMMIT_BRANCH"
    elif [ -n "$CI_COMMIT_TAG" ]; then
      SAFE_REF="$CI_COMMIT_TAG"
    else
      SAFE_REF="unknown"
    fi
    SAFE_REF=$(echo "$SAFE_REF" | tr '/' '-')

    echo "Pushing image with tags:"
    echo " - ${IMAGE}:latest"
    echo " - ${IMAGE}:${SHORT_SHA}"
    echo " - ${IMAGE}:${SAFE_REF}"
    echo "Using cache bust value: ${CACHE_BUST}"


    buildctl-daemonless.sh build \
      --frontend=dockerfile.v0 \
      --local context=. \
      --local dockerfile=. \
      --opt build-arg:RUST_TARGET=x86_64-unknown-linux-musl \
      --opt platform=linux/amd64 \
      --import-cache type=registry,ref=${CACHE_IMAGE},ignore-for=src/ \
      --export-cache type=registry,ref=${CACHE_IMAGE},mode=max \
      --opt build-arg:CACHE_BUST=${CACHE_BUST} \
      --output type=image,name=${IMAGE}:latest,push=true \
      --output type=image,name=${IMAGE}:${SHORT_SHA},push=true \
      --output type=image,name=${IMAGE}:${SAFE_REF},push=true \
      --output type=local,dest=./dist \
      --opt target=binary-export

    cp dist/treat-dispenser-api dist/treat-dispenser-api-amd64

  artifacts:
    paths:
      - dist/treat-dispenser-api-amd64
    expire_in: 1 week


build-arm64-binary:
  stage: build
  # for official Docker Hub images, we need to use the 'library' namespace
  image: harbor.crungo.net/scout/rust-arm64-compiler:latest
  tags:
    - fast
  rules:
    - if: '$CI_COMMIT_BRANCH'  # Only run if this is a branch pipeline
      when: always
  script:
    # Create output directory
    - mkdir -p dist
    
    # Build directly without cross
    - cargo build --release --target aarch64-unknown-linux-musl
    
    # Copy binary to output directory
    - cp target/aarch64-unknown-linux-musl/release/treat-dispenser-api dist/treat-dispenser-api-aarch64
  artifacts:
    paths:
      - dist/treat-dispenser-api-aarch64
    expire_in: 1 week

tag-release:
  stage: deploy
  image: harbor.crungo.net/scout/alpine-git:latest
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      changes:
        - Cargo.toml
      when: manual
  script: |
    set -ex
    VERSION=$(grep '^version =' Cargo.toml | head -1 | sed -E "s/version = \"([^\"]+)\"/\1/")
    echo "Version: $VERSION"

    TAG="v$VERSION"

    git tag "$TAG" "$CI_COMMIT_SHA"
    git push "https://GITLAB_PUSH_USER:${GITLAB_PAT}@${CI_SERVER_HOST}/${CI_PROJECT_PATH}.git" "$TAG"
  needs:
    - build-and-push
    - build-arm64-binary

# use the gitlab CLI to fetch artifacts for the tag we want to release
fetch-artifacts-for-tag:
  stage: deploy
  image: harbor.crungo.net/scout/alpine-git:latest
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+(-[A-Za-z0-9\.\_]+)?(\+[A-Za-z0-9\.\_]+)?$/'
      when: always
  script: |
    glab job artifact main build-and-push
    glab job artifact main build-arm64-binary
  artifacts:
    paths:
      - dist/treat-dispenser-api-amd64
      - dist/treat-dispenser-api-aarch64
  
  variables:
    GITLAB_TOKEN: $GITLAB_PAT 
    GITLAB_HOST: gitlab.crungo.net

release-github:
  stage: deploy
  image: harbor.crungo.net/scout/alpine-git:latest
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+(-[A-Za-z0-9\.\_]+)?(\+[A-Za-z0-9\.\_]+)?$/'
  dependencies:
    - fetch-artifacts-for-tag
  script: |
    set -ex
    ls -lh dist/
    VERSION=$(grep '^version =' Cargo.toml | head -1 | sed -E "s/version = \"([^\"]+)\"/\1/")
    echo "Version: $VERSION"

    RELEASE_NAME="Treat Dispenser API $CI_COMMIT_TAG"

    # get previous release tag
    git fetch --tags --unshallow || git fetch --tags

    PREV_TAG=$(git tag --sort=-v:refname | grep -v "$CI_COMMIT_TAG" | grep '^v' | head -n1)
    if [ "$PREV_TAG" = "none" ]; then
      CHANGELOG="Initial release"
    else
      # generate changelog between previous tag and current commit
      CHANGELOG=$(git log --pretty=format:'- %s (%an)' "${PREV_TAG}".."${CI_COMMIT_SHA}")
    fi

    gh release create "$CI_COMMIT_TAG" \
      dist/treat-dispenser-api-amd64 \
      dist/treat-dispenser-api-aarch64 \
      --repo github.com/crungo-net/treat-dispenser-api \
      --title "$RELEASE_NAME" \
      --notes "Automated release from GitLab CI for commit $CI_COMMIT_SHA

    ## Changes since $PREV_TAG

    $CHANGELOG  
    "

  variables:
    GITHUB_TOKEN: $GITHUB_TOKEN